# -*- mode: snippet -*-
# name: uptemplate
# key: uptemplate
# --
${1:Template}
#+BEGIN_SRC emacs-lisp :tangle yes :noweb yes
  (eval \`(use-package ${2:`(or (org-entry-get (point) "noweb-ref") "package")}
       ,@(cl-loop
          for forms in '((:if         
 <<${3:$2}-if>>)
                         (:load-path   
<<$3-load-path>>)
                         (:bind        
<<$3-bindings>>)
                         (:diminish
<<$3-diminish>>)
                         (:commands
<<$3-commands>>)
                         (:mode
<<$3-mode>>)
                         (:interpreter
<<$3-interpreter>>)
                         (:defines
<<$3-defines>>))
          append (let ((keyword (car forms))
                        (body (cdr forms)))
                    (cond ((null body) '())
                          ((eq 1 (length body)) forms)
                          (t (list keyword body)))))
       ,@(cl-loop
          for forms in '((:pre-load 
<<$3-preload>>)
                         (:init
<<$3-init>>)
                         (:config 
<<$3-config>>)
                         (:idle 
<<$3-idle>>))
          append (let ((keyword (car forms))
                       (body (cdr forms)))
                   (cond ((null body) '())
                         ((eq 1 (length body)) forms)
                         (t \`(,keyword (progn ,@body))))))))
  
#+END_SRC

